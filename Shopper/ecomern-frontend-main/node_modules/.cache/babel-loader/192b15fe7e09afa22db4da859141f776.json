{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nexport const appApi = createApi({\n  reducerPath: \"appApi\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"http://localhost:8080\"\n  }),\n  endpoints: builder => ({\n    signup: builder.mutation({\n      query: user => ({\n        url: \"/users/signup\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    login: builder.mutation({\n      query: user => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        body: user\n      })\n    }),\n    // creating product\n    createProduct: builder.mutation({\n      query: product => ({\n        url: \"/products\",\n        body: product,\n        method: \"POST\"\n      })\n    }),\n    deleteProduct: builder.mutation({\n      query: _ref => {\n        let {\n          product_id,\n          user_id\n        } = _ref;\n        return {\n          url: `/products/${product_id}`,\n          body: {\n            user_id\n          },\n          method: \"DELETE\"\n        };\n      }\n    }),\n    updateProduct: builder.mutation({\n      query: product => ({\n        url: `/products/${product.id}`,\n        body: product,\n        method: \"PATCH\"\n      })\n    }),\n    // add to cart\n    addToCart: builder.mutation({\n      query: cartInfo => ({\n        url: \"/products/add-to-cart\",\n        body: cartInfo,\n        method: \"POST\"\n      })\n    }),\n    // remove from cart\n    removeFromCart: builder.mutation({\n      query: body => ({\n        url: \"/products/remove-from-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // increase cart\n    increaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/increase-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // decrease cart\n    decreaseCartProduct: builder.mutation({\n      query: body => ({\n        url: \"/products/decrease-cart\",\n        body,\n        method: \"POST\"\n      })\n    }),\n    // create order\n    createOrder: builder.mutation({\n      query: body => ({\n        url: \"/orders\",\n        method: \"POST\",\n        body\n      })\n    })\n  })\n});\nexport const {\n  useSignupMutation,\n  useLoginMutation,\n  useCreateProductMutation,\n  useAddToCartMutation,\n  useRemoveFromCartMutation,\n  useIncreaseCartProductMutation,\n  useDecreaseCartProductMutation,\n  useCreateOrderMutation,\n  useDeleteProductMutation,\n  useUpdateProductMutation\n} = appApi;\nexport default appApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","appApi","reducerPath","baseQuery","baseUrl","endpoints","builder","signup","mutation","query","user","url","method","body","login","createProduct","product","deleteProduct","product_id","user_id","updateProduct","id","addToCart","cartInfo","removeFromCart","increaseCartProduct","decreaseCartProduct","createOrder","useSignupMutation","useLoginMutation","useCreateProductMutation","useAddToCartMutation","useRemoveFromCartMutation","useIncreaseCartProductMutation","useDecreaseCartProductMutation","useCreateOrderMutation","useDeleteProductMutation","useUpdateProductMutation"],"sources":["C:/Users/HARSH/OneDrive/Documents/MEARN/ecomern-frontend-main/src/services/appApi.js"],"sourcesContent":["import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const appApi = createApi({\n  reducerPath: \"appApi\",\n  baseQuery: fetchBaseQuery({ baseUrl: \"http://localhost:8080\" }),\n  endpoints: (builder) => ({\n    signup: builder.mutation({\n      query: (user) => ({\n        url: \"/users/signup\",\n        method: \"POST\",\n        body: user,\n      }),\n    }),\n\n    login: builder.mutation({\n      query: (user) => ({\n        url: \"/users/login\",\n        method: \"POST\",\n        body: user,\n      }),\n    }),\n    // creating product\n    createProduct: builder.mutation({\n      query: (product) => ({\n        url: \"/products\",\n        body: product,\n        method: \"POST\",\n      }),\n    }),\n\n    deleteProduct: builder.mutation({\n      query: ({ product_id, user_id }) => ({\n        url: `/products/${product_id}`,\n        body: {\n          user_id,\n        },\n        method: \"DELETE\",\n      }),\n    }),\n\n    updateProduct: builder.mutation({\n      query: (product) => ({\n        url: `/products/${product.id}`,\n        body: product,\n        method: \"PATCH\",\n      }),\n    }),\n\n    // add to cart\n    addToCart: builder.mutation({\n      query: (cartInfo) => ({\n        url: \"/products/add-to-cart\",\n        body: cartInfo,\n        method: \"POST\",\n      }),\n    }),\n    // remove from cart\n    removeFromCart: builder.mutation({\n      query: (body) => ({\n        url: \"/products/remove-from-cart\",\n        body,\n        method: \"POST\",\n      }),\n    }),\n\n    // increase cart\n    increaseCartProduct: builder.mutation({\n      query: (body) => ({\n        url: \"/products/increase-cart\",\n        body,\n        method: \"POST\",\n      }),\n    }),\n\n    // decrease cart\n    decreaseCartProduct: builder.mutation({\n      query: (body) => ({\n        url: \"/products/decrease-cart\",\n        body,\n        method: \"POST\",\n      }),\n    }),\n    // create order\n    createOrder: builder.mutation({\n      query: (body) => ({\n        url: \"/orders\",\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const {\n  useSignupMutation,\n  useLoginMutation,\n  useCreateProductMutation,\n  useAddToCartMutation,\n  useRemoveFromCartMutation,\n  useIncreaseCartProductMutation,\n  useDecreaseCartProductMutation,\n  useCreateOrderMutation,\n  useDeleteProductMutation,\n  useUpdateProductMutation,\n} = appApi;\n\nexport default appApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}